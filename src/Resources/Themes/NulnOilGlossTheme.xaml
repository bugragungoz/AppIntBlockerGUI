<!-- File: Resources/Themes/NulnOilGlossTheme.xaml -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Nuln Oil Gloss Theme Palette -->
    <!-- Deep, warm brown-black background -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="#171310"/>
    
    <!-- A slightly lighter brown-gray for panels and cards -->
    <SolidColorBrush x:Key="CardBrush" Color="#2a2623"/>
    
    <!-- A warm, desaturated orange/gold for primary actions -->
    <SolidColorBrush x:Key="AccentBrush" Color="#eebb88"/>
    
    <!-- A brighter gold for hover effects -->
    <SolidColorBrush x:Key="AccentHoverBrush" Color="#f8d4a6"/>
    
    <!-- Soft, warm off-white for high readability -->
    <SolidColorBrush x:Key="TextBrush" Color="#f5f0eb"/>
    
    <!-- A muted, warm gray for secondary info -->
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="#a8a29c"/>
    
    <!-- A gentle hover effect for list items, buttons, etc. -->
    <SolidColorBrush x:Key="HoverBrush" Color="#3c3835"/>

    <!-- Background for input controls like TextBox -->
    <SolidColorBrush x:Key="InputBackgroundBrush" Color="#3c3835"/>
    
    <!-- Accent color for when a button is pressed -->
    <SolidColorBrush x:Key="AccentPressedBrush" Color="#e6a872"/>

    <!-- A visible, standard error red for high contrast on a dark background -->
    <SolidColorBrush x:Key="ErrorBrush" Color="#e74c3c"/>

    <!-- Border brush for general use -->
    <SolidColorBrush x:Key="BorderBrush" Color="#3c3835"/>

    <!-- MahApps.Metro Comprehensive Override for Dark Theme -->
    <SolidColorBrush x:Key="MahApps.Brushes.Accent" Color="#eebb88"/>
    <SolidColorBrush x:Key="MahApps.Brushes.Accent2" Color="#f8d4a6"/>
    <SolidColorBrush x:Key="MahApps.Brushes.Accent3" Color="#e6a872"/>
    <SolidColorBrush x:Key="MahApps.Brushes.Accent4" Color="#dc9660"/>
    
    <!-- Window and Control Backgrounds -->
    <SolidColorBrush x:Key="MahApps.Brushes.ThemeBackground" Color="#171310"/>
    <SolidColorBrush x:Key="MahApps.Brushes.ThemeForeground" Color="#f5f0eb"/>
    <SolidColorBrush x:Key="MahApps.Brushes.WindowBackground" Color="#171310"/>
    <SolidColorBrush x:Key="MahApps.Brushes.Control.Background" Color="#2a2623"/>
    <SolidColorBrush x:Key="MahApps.Brushes.ControlText" Color="#f5f0eb"/>
    
    <!-- Text and Input Controls -->
    <SolidColorBrush x:Key="MahApps.Brushes.Text" Color="#f5f0eb"/>
    <SolidColorBrush x:Key="MahApps.Brushes.Label" Color="#f5f0eb"/>
    <SolidColorBrush x:Key="MahApps.Brushes.TextBox.Background" Color="#2a2623"/>
    <SolidColorBrush x:Key="MahApps.Brushes.TextBox.Border" Color="#eebb88"/>
    <SolidColorBrush x:Key="MahApps.Brushes.TextBox.Foreground" Color="#f5f0eb"/>
    
    <!-- Borders and Separators -->
    <SolidColorBrush x:Key="MahApps.Brushes.Border" Color="#2a2623"/>
    <SolidColorBrush x:Key="MahApps.Brushes.Separator" Color="#2a2623"/>
    
    <!-- Button States -->
    <SolidColorBrush x:Key="MahApps.Brushes.Button.Background" Color="#2a2623"/>
    <SolidColorBrush x:Key="MahApps.Brushes.Button.Border" Color="#eebb88"/>
    <SolidColorBrush x:Key="MahApps.Brushes.Button.Foreground" Color="#f5f0eb"/>
    
    <!-- TabControl Override -->
    <SolidColorBrush x:Key="MahApps.Brushes.TabControl.Background" Color="#171310"/>
    <SolidColorBrush x:Key="MahApps.Brushes.TabItem.Background" Color="#2a2623"/>
    <SolidColorBrush x:Key="MahApps.Brushes.TabItem.Foreground" Color="#f5f0eb"/>
    <SolidColorBrush x:Key="MahApps.Brushes.TabItem.Selected.Background" Color="#eebb88"/>
    <SolidColorBrush x:Key="MahApps.Brushes.TabItem.Selected.Foreground" Color="#171310"/>

    <!-- STYLES -->
    
    <!-- Global FocusVisual Style Remover -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Navigation RadioButton Style -->
    <Style x:Key="NavRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Padding" Value="20,12"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="Background" Value="{StaticResource AccentHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modern TextBox Style -->
    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="#1a1a1a"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="CaretBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Apply ModernTextBoxStyle to all TextBoxes -->
    <Style TargetType="TextBox" BasedOn="{StaticResource ModernTextBoxStyle}"/>

    <!-- Modern Button Style -->
    <Style x:Key="ModernButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="24,12"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Apply ModernButtonStyle to all Buttons -->
    <Style TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}"/>

    <!-- PlaceholderTextBoxStyle for search boxes -->
    <Style x:Key="PlaceholderTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                           BorderBrush="{StaticResource AccentBrush}"
                           BorderThickness="2"
                           CornerRadius="8">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="8"/>
                            <TextBlock Text="{TemplateBinding Tag}"
                                     Foreground="#888888"
                                     FontStyle="Italic"
                                     Margin="10,0,0,0"
                                     VerticalAlignment="Center"
                                     IsHitTestVisible="False">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Orange bordered textbox style -->
    <Style x:Key="OrangeTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="#2d2d30"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                           BorderBrush="{TemplateBinding BorderBrush}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="8">
                        <ScrollViewer x:Name="PART_ContentHost" 
                             Margin="{TemplateBinding Padding}"
                             VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern CheckBox Style -->
    <Style x:Key="ModernCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                Grid.Column="0"
                                Width="18" Height="18"
                                Background="#1a1a1a"
                                BorderBrush="{StaticResource AccentBrush}"
                                BorderThickness="2"
                                CornerRadius="4"
                                VerticalAlignment="Center"
                                Margin="0,0,8,0">
                            <Path x:Name="checkMark"
                                  Stroke="{StaticResource AccentBrush}"
                                  StrokeThickness="2"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  Data="M3,7 L7,11 L13,5"
                                  Stretch="Uniform"
                                  Margin="2"
                                  Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter Grid.Column="1"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource AccentHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="checkBoxBorder" Property="Opacity" Value="0.6"/>
                            <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Apply ModernCheckBoxStyle to all CheckBoxes -->
    <Style TargetType="CheckBox" BasedOn="{StaticResource ModernCheckBoxStyle}"/>

</ResourceDictionary> 